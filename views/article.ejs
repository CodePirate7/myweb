<main class="container text-dark" style="margin-top:6rem!important">
  <!-- 目录 -->
  <section>
    <div class="mt-5">
      <p class="float-left" style="font-size: 12px;margin-bottom: .2rem;">
        <span style="cursor: pointer;">Home</span> &gt; <span style="cursor: pointer;">论坛</span> &gt; <span
          style="cursor: pointer;"><%= data.title %></span>
      </p>
    </div>
    <!-- 清除浮动 -->
    <div class="clearfix"> </div>
  </section>

  <!-- 分页部分，没做分页，只有一个发表新帖 -->
  <section>
    <div class="mt-1">
      <p class="bg-info text-white" style="font-size: 12px; padding: 3px; cursor: pointer; width: 60px;">发表新帖</p>
    </div>
  </section>

  <!-- 帖子主要内容 -->
  <section >
    <div class="row w-100 mt-2 mx-0 mb-3"
      style="line-height: 25px; border-bottom: 1px #eee solid;border-top: 3px rgb(0,0,240) solid;">
      <div class="col-2" style="font-size: 12px; color: #888; background-color: rgb(250,250,250);">
        查看: <span style="color: rgb(242,156,100)"><%= data.views %></span> |
        回复: <span style="color: rgb(242,156,100)"><%= data.comments.length %></span>
      </div>
      <div class="col-10 " style="font-size: 18px; font-weight: bold;">
        <span style="cursor: pointer; background-color: transparent;"><%= data.title %></span>
      </div>
    </div>

    <div class="row w-100 mt-1 mx-0 border shadow mb-3">
      <div class="col-2 px-0 text-center bg-light" style="font-size: 16px;">
        <p style=" padding-left: 10px; border-bottom: 1px #ccc dashed;">
          <span class="name" style="display: inline-block; cursor: pointer;"><%- data.author.username %></span>
        </p>
        <p class="mx-auto">
          <img src="/images/delf.jpeg" alt="" style="width: 80px; height: 80px; cursor: pointer;">
        </p>
      </div>
      <div class="col-10 " style="position: relative; font-size: 14px;">
        <p style="border-bottom: 1px #ccc dashed;">
          发表于<span class="time"><%- /[^T]+/.exec(data.createdAt) %></span>
        </p>
        <div class="content">
          <%- data.content%>
        </div>
      </div>
    </div>
  </section>

  <!-- 评论部分   -->
  <section id="pinglun" class="text-dark">


  </section>
  <section style="margin-top:1rem">
    <div id="summernote"></div>
    <div style="margin-top:1rem">
      <% if(login){%>
      <button id="sub" type="submit" class="btn btn-primary" data-id='<%= user.id %>'>评论</button>
      <% }else{%>
      <button id="sub" type="submit" class="btn btn-primary" data-id=null>评论</button>
      <% }%>
    </div>
  </section>
</main>
<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-lite.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-lite.js"></script>
<script>
  toastr.options.positionClass = 'toast-center-center';
  let url = window.location.href
  var index = url.lastIndexOf("\/");
  url = url.substring(index + 1, url.length);
  //初始化富文本编辑器
  $('#summernote').summernote({
    placeholder: '在此输入内容',
    tabsize: 2,
    height: 200,
  });
  //设置富文本编辑器背景透明
  $(function () {
    $('.note-editable').css("background", "transparent")
    $('.note-toolbar').css("background", "transparent")
  });
  //canvas
  
  //监听评论提交
  $(function () {
    $('#sub').click(function () {
      let id = $('#sub').data('id')
      if (id) {
        let data = `body=${$('#summernote').summernote('code')}&&author=${id}&&article=${url}`
        $.ajax({
          url: '/comment/create',
          method: 'post',
          data: data,
          success(msg) {
            toastr.success("评论成功!");
            setTimeout(function () {
              window.location.reload()
            }, 2000)
          }
        })
      } else {
        alert('请先登录!')
      }

    });
  })
  //获取评论列表
  $(function () {
    $.ajax({
      url: '/commentview',
      method: 'post',
      data: {
        id: url
      },
      success(data) {
        let str = ''
        $.each(data, (i, val) => {
          let reg = /[^T]+/
          let time = reg.exec(data[i].createdAt)
          str += `<div class="row w-100 mt-1 mx-0 border shadow mb-3 "><div class="col-2 pl-0 bg-light" style="font-size: 16px;"><p class="pl-1 text-center" style="border-bottom: 1px #ccc dashed;">
          <span class="text-dark" style="display: inline-block; cursor: pointer;">${val.author.username}</span>
        </p>
        <p class="text-center">
          <img src="/images/delf.jpeg" alt="" style="width: 80px; height: 80px; cursor: pointer;">
        </p>
      </div>
      <div class="col-10 " style="font-size: 14px;">
        <p style="border-bottom: 1px #ccc dashed;">
          <span class="author">${i+2}楼</span> 发表于 <span>${time}</span>
        </p>
        <div class="content" style="font-size: 16px;">
          ${val.body}
        </div>
      </div>
    </div>`
        })
        $('#pinglun').append(k => {
            return str
          })
      {
    var canvas = document.getElementById("cas");
    var ctx = canvas.getContext("2d");
    resize();

    window.onresize = resize;

    function resize() {
      canvas.width = $(window).width();
      canvas.height = document.body.offsetHeight;
    }
    var RAF = (function () {
      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window
        .mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||
        function (callback) {
          window.setTimeout(callback, 1000 / 60);
        };
    })();
    // 鼠标活动时，获取鼠标坐标
    var warea = {
      x: null,
      y: null,
      max: 20000
    };
    window.onmousemove = function (e) {
      e = e || window.event;
      warea.x = e.clientX;
      warea.y = e.clientY;
    };
    window.onmouseout = function (e) {
      warea.x = null;
      warea.y = null;
    };
    // 添加粒子
    // x，y为粒子坐标，xa, ya为粒子xy轴加速度，max为连线的最大距离
    var dots = [];
    for (var i = 0; i < 200; i++) {
      var x = Math.random() * canvas.width;
      var y = Math.random() * canvas.height;
      var xa = Math.random() * 2 - 1;
      var ya = Math.random() * 2 - 1;
      dots.push({
        x: x,
        y: y,
        xa: xa,
        ya: ya,
        max: 6000
      })
    }
    // 延迟100秒开始执行动画，如果立即执行有时位置计算会出错
    setTimeout(function () {
      animate();
    }, 100);
    // 每一帧循环的逻辑
    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      // 将鼠标坐标添加进去，产生一个用于比对距离的点数组
      var ndots = [warea].concat(dots);
      dots.forEach(function (dot) {
        // 粒子位移
        dot.x += dot.xa;
        dot.y += dot.ya;
        // 遇到边界将加速度反向
        dot.xa *= (dot.x > canvas.width || dot.x < 0) ? -1 : 1;
        dot.ya *= (dot.y > canvas.height || dot.y < 0) ? -1 : 1;
        // 绘制点
        ctx.fillRect(dot.x - 0.5, dot.y - 0.5, 1, 1);
        // 循环比对粒子间的距离
        for (var i = 0; i < ndots.length; i++) {
          var d2 = ndots[i];
          if (dot === d2 || d2.x === null || d2.y === null) continue;
          var xc = dot.x - d2.x;
          var yc = dot.y - d2.y;
          // 两个粒子之间的距离
          var dis = xc * xc + yc * yc;
          // 距离比
          var ratio;
          // 如果两个粒子之间的距离小于粒子对象的max值，则在两个粒子间画线
          if (dis < d2.max) {
            // 如果是鼠标，则让粒子向鼠标的位置移动
            if (d2 === warea && dis > (d2.max / 2)) {
              dot.x -= xc * 0.03;
              dot.y -= yc * 0.03;
            }
            // 计算距离比
            ratio = (d2.max - dis) / d2.max;
            // 画线
            ctx.beginPath();
            ctx.lineWidth = ratio / 2;
            ctx.strokeStyle = 'rgba(0,0,0,' + (ratio + 0.2) + ')';
            ctx.moveTo(dot.x, dot.y);
            ctx.lineTo(d2.x, d2.y);
            ctx.stroke();
          }
        }
        // 将已经计算过的粒子从数组中删除
        ndots.splice(ndots.indexOf(dot), 1);
      });
      RAF(animate);
    }
  }  
      }
    })
  })

</script>
